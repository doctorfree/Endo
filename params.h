/*************************************************************************
 *                                                                       *
 *  Copyright (c) 1992-2011 Ronald Joe Record                           *
 *                                                                       *
 *************************************************************************/
 /*
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 *  The X Consortium, and any party obtaining a copy of these files from
 *  the X Consortium, directly or indirectly, is granted, free of charge,
 *  a full and unrestricted irrevocable, world-wide, paid up, royalty-free,
 *  nonexclusive right and license to deal in this software and
 *  documentation files (the "Software"), including without limitation the
 *  rights to use, copy, modify, merge, publish, distribute, sublicense,
 *  and/or sell copies of the Software, and to permit persons who receive
 *  copies from any such party to do so.  This license includes without
 *  limitation a license to do the foregoing actions under any patents of
 *  the party supplying this software to the X Consortium.
 */

#ifdef NorthSouth
double  WT, VT, A_zero, A_one, A_two, A_star, singularity, O_S_B_one;
double  H_zero, H_one, S_singularity, B_zero, B_one, O_B_zero, O_B_one;
double  S_A_zero, S_A_one, S_A_two, S_A_star, S_B_zero, S_B_one, O_S_B_zero;
#endif
int Qflag=0, orbits_1d=0, model_1d=1, animate=0, mandel=1; 
int numeric=0, upper=1, lower=1, axes=0;
static int xflag=0, yflag=0, wflag=0, hflag=0;
static int Aflag=0, Bflag=0, Cflag=0, Dflag=0, Eflag=0, Fflag=0; 
static int Jflag=0, Kflag=0, Lflag=0, Mflag=0, Gflag=0, Iflag=0;
static int aflag=0, bflag=0, cflag=0, dflag=0, eflag=0, fflag=0; 
static int jflag=0, kflag=0, lflag=0, mflag=0, gflag=0, iflag=0;
int symmetric[NUMMAPS] = { 0,0,0,0,0,0,0,
#ifdef NorthSouth
#ifdef Gardini
	0,0,0,0,
#else
	0,0,0,
#endif
#else
#ifdef Gardini
	0,0,0,
#endif
#endif
	0,0,0,0,0,0,0,0,0,0,0,0,0,0};
static double amins[NUMMAPS] = { 0.0,0.0,0.0,0.0,0.0,0.0,0.0,
#ifdef NorthSouth
#ifdef Gardini
	0.0,0.0,0.0,0.0,
#else
	0.0,0.0,0.0,
#endif
#else
#ifdef Gardini
	0.0,0.0,0.0,
#endif
#endif
	-M_PI,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.5,0.0,0.0,-1.8,-1.0,-1.0,0.0
#ifdef Plendo
	,0.0,0.0,0.0,0.0
#endif
	};
static double bmins[NUMMAPS] = { 0.0,0.0,0.0,0.0,0.0,0.0,0.0,
#ifdef NorthSouth
#ifdef Gardini
	0.0,0.0,0.0,0.0,
#else
	0.0,0.0,0.0,
#endif
#else
#ifdef Gardini
	0.0,0.0,0.0,
#endif
#endif
	-M_PI,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.5,0.0,0.0,-2.3,-1.0,-1.0,0.0
#ifdef Plendo
	,0.0,0.0,0.0,0.0
#endif
	};
static double aranges[NUMMAPS] = {1.0, 1.0, 100.0, 1.0, 1.0, 1.0, M_2PI, 
#ifdef NorthSouth
#ifdef Gardini
	100.0,1.0,1.0,1.0,
#else
	100.0,100.0,100.0,
#endif /* Gardini */
#else
#ifdef Gardini
	1.0, 1.0, 1.0,
#endif /* Gardini */
#endif /* NorthSouth */
	M_2PI,2.0,1.0,1.0,2.0,1.0,6.0,3.0,5.0,1.0,4.1,2.0,2.0,1.0
#ifdef Plendo
	,1.0,1.0,1.0,1.0
#endif
	};
static double branges[NUMMAPS] = {1.0, 1.0, 100.0, 1.0, 1.0, 1.0, M_2PI, 
#ifdef NorthSouth
#ifdef Gardini
	100.0,1.0,1.0,1.0,
#else
	100.0,100.0,100.0,
#endif /* Gardini */
#else
#ifdef Gardini
	1.0,1.0,1.0,
#endif /* Gardini */
#endif /* NorthSouth */
	M_2PI,2.0,1.0,1.0,2.0,1.0,6.0,3.0,5.0,1.0,4.1,2.0,2.0,1.0
#ifdef Plendo
	,1.0,1.0,1.0,1.0
#endif
	};
static double  pmins[NUMMAPS][MAXPARAMS] = {
    { 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
    { 0.0,0.0,0.0,0.0,-1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0 },
    { 0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0 },
    { 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
    { 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
    { 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
    { 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 },
#ifdef NorthSouth
    { 0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-10.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0 },
#endif
#ifdef Gardini
    { 1.0,1.9,1.9,0.0,0.0,0.0,0.0,0.0,-10.0,0.0,-1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,-50.0,0.0 },
    { -1.5,0.1,0.0,0.0,0.0,0.0,0.0,0.0,-10.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0 },
    { 1.4,0.9,0.0,0.0,0.0,0.0,0.0,0.0,-10.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0 },
#endif
    { 0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0 },
    { 5.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0 },
    { 0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0 },
    { 0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0 },
    { 1.4,0.32,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0 },
    { -1.0,0.0,-1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0 },
    { 0.7,0.84,0.84,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0 },
    { -2.25,-1.5,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0 },
    { 0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0 },
    { 2.0,-10.0,-10.0,-10.0,-10.0,-10.0,-10.0,-10.0,-10.0,-10.0,-10.0,-10.0,-10.0,-10.0,-10.0,-10.0,-10.0,-10.0,-10.0,-10.0,-10.0,-10.0,-10.0,-10.0 },
    { 0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0 },
    { -1.0,-1.0,0.0,-1.0,0.0,0.0,-2.0,0.0,0.0,0.0,0.0,0.0,-1.0,-1.0,0.0,-1.0,0.0,0.0,-2.0,0.0,0.0,0.0,0.0,0.0 },
    { -5.0,0.0,0.0,0.0,-1.0,2.0,-1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0 },
    { 0.0,0.09,-1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0 } 
#ifdef Plendo
    , { -1.5,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0 },
    { 0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0 },
    { 0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0 },
    { 0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0 }
#endif
	};
static double  pmaxs[NUMMAPS][MAXPARAMS] = {
    { 4.0, 4.0, 4.0, 4.0, 100.0, 4.0, 100.0, 4.0, 100.0, 4.0, 100.0, 4.0,
      4.0, 4.0, 4.0, 4.0, 100.0, 4.0, 100.0, 4.0, 100.0, 4.0, 100.0, 4.0 },
    { 2.0, 2.0, 2.0, 2.0, 0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0,
      2.0, 2.0, 2.0, 2.0, 0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0 },
    { 100.0, 100.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
      100.0, 100.0, 0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 },
    { 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
      1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 },
    { 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
      1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 },
    { 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
      1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 },
    { 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
      1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 },
#ifdef NorthSouth
    { 1.0, 1.0, 10.0, 1.0, 1.0, 30.0, 65.0, 20.0, 0.0, 100.0, 0.0, 1.0,
      1.0, 1.0, 5.0, 1.0, 10.0, 10.0, 15.0, 50.0, 5.0, 10.0, 0.0, 1.0 },
#endif
#ifdef Gardini
    { 1.73, 2.1, 2.1, 1.0, 1.0, 30.0, 65.0, 20.0, 0.0, 100.0, 0.0, 100.0,
      1.0, 1.0, 5.0, 1.0, 10.0, 10.0, 15.0, 50.0, 5.0, 10.0, 0.0, 100.0 },
    { -0.5, 0.4, 10.0, 1.0, 1.0, 30.0, 65.0, 20.0, 0.0, 100.0, 0.0, 1.0,
      1.0, 1.0, 5.0, 1.0, 10.0, 10.0, 15.0, 50.0, 5.0, 10.0, 0.0, 1.0 },
    { 1.55, 1.1, 10.0, 1.0, 1.0, 30.0, 65.0, 20.0, 0.0, 100.0, 0.0, 1.0,
      1.0, 1.0, 5.0, 1.0, 10.0, 10.0, 15.0, 50.0, 5.0, 10.0, 0.0, 1.0 },
#endif
    { 10.0, 10.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
      1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 },
    { 20.0, 4.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
      1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 },
    { 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
      1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 },
    { 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
      1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 },
    { 2.0, 0.6, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
      1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 },
    { 1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0 },
    { 0.84,1.0,1.0,1.0,1.0,1.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0 },
    { 0.75,1.5,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0 },
    { 2.0,5.0,5.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0 },
    { 23.0,10.0,10.0,10.0,10.0,10.0,10.0,10.0,10.0,10.0,10.0,10.0,10.0,10.0,10.0,10.0,10.0,10.0,10.0,10.0,10.0,10.0,10.0,10.0 },
    { 2.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0 },
    { 1.0,1.0,1.0,1.0,1.0,1.0,2.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,1.0,1.0,1.0,1.0,2.0,0.0,0.0,0.0,0.0,0.0 },
    { 5.0,10.0,3.0,2.0,1.0,16.0,1.0,24.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0 },
    { 5.0,0.11,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0 }
#ifdef Plendo
    , { 1.5,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0 },
    { 1.0,0.2,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0 },
    { 1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0 },
    { 1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0 }
#endif
	};
static double  definit[NUMMAPS][2] = {
    { 0.3, 0.7 }, { 0.3, 0.7 }, { 30.0, 70.0 }, { 0.3, 0.7 }, { 0.3, 0.7 },
    { 0.3, 0.7 }, { 0.3, 0.7 }, 
#ifdef NorthSouth
#ifdef Gardini
    {0.3,0.7}, {0.3,0.7}, {0.3,0.7}, {0.3,0.7},
#else
    {0.3,0.7}, {0.3,0.7}, {0.3,0.7},
#endif
#else
#ifdef Gardini
    {0.3,0.7}, {0.3,0.7}, {0.3,0.7},
#endif
#endif
    { 0.3, 0.7 }, {0.0, 0.0 }, {0.5, 0.5 }, {0.5, 0.5}, {0.5, 0.5}, {0.5, 0.5},
    { 0.5, 0.5 }, {0.0, 0.0}, {0.5, 0.5}, {0.3, 0.5}, {0.5, 0.5}, {0.5, 0.5},
    { 0.5, 0.5 }, { 0.5, 0.5 } 
#ifdef Plendo
	, { 0.3, 0.7}, { 0.3, 0.7}, { 0.3, 0.7}, { 0.3, 0.7}
#endif
	};
static double  defparms[NUMMAPS][MAXPARAMS] = {
    { 2.55, 1.0, 2.55, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
      2.55, 1.0, 2.55, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 },
    { 0.6, 1.1, 0.9, 1.0, -0.25, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
      0.6, 1.1, 0.9, 1.0, -0.25, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 },
    { 10.0, 10.0, 0.1, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
      10.0, 10.0, -0.01, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 },
    { 0.3, 0.1, 0.2, 0.1, 0.1, 0.1, 0.1, 0.1, 0.8, 0.2, 0.8, 0.2,
      0.3, 0.1, 0.2, 0.1, 0.1, 0.1, 0.1, 0.1, 0.8, 0.2, 0.8, 0.2 },
    { 0.6, 0.1, 0.6, 0.1, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
      0.6, 0.1, 0.6, 0.1, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 },
    { 0.3, 0.1, 0.2, 0.1, 0.1, 0.1, 0.1, 0.1, 0.8, 0.2, 0.8, 0.2,
      0.3, 0.1, 0.2, 0.1, 0.1, 0.1, 0.1, 0.1, 0.8, 0.2, 0.8, 0.2 },
    { 0.8, 0.8, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
      0.8, 0.8, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 },
#ifdef NorthSouth
    { 0.1, 0.12, 4.5, 0.02, 0.01, 3.0, 13.5, 2.7, -2.0, 75.0, 0.0, 0.6,
      0.1, 0.12, 2.0, 0.15, 1.8, 1.7, 3.13, 12.0, 0.5, 6.0, 0.0, 0.6 },
#endif
#ifdef Gardini
    { 1.5, 2.0, 2.0, 0.02, 0.01, 3.0, 13.5, 2.7, -2.0, 75.0, -0.025, 50.0,
      0.1, 0.08, 2.0, 0.15, 1.8, 1.7, 3.13, 12.0, 0.5, 6.0, -9.7, 50.0 },
    { -0.7, 0.1, 4.5, 0.02, 0.01, 3.0, 13.5, 2.7, -2.0, 75.0, 0.0, 0.6,
      0.1, 0.12, 2.0, 0.15, 1.8, 1.7, 3.13, 12.0, 0.5, 6.0, 0.0, 0.6 },
    { 1.534, 1.0, 4.5, 0.02, 0.01, 3.0, 13.5, 2.7, -2.0, 75.0, 0.0, 0.6,
      0.1, 0.12, 2.0, 0.15, 1.8, 1.7, 3.13, 12.0, 0.5, 6.0, 0.0, 0.6 },
#endif
    { 0.3, 1.1, 0.2, 0.1, 0.1, 0.1, 0.1, 0.1, 0.8, 0.2, 0.8, 0.2,
      0.3, 0.1, 0.2, 0.1, 0.1, 0.1, 0.1, 0.1, 0.8, 0.2, 0.8, 0.2 },
    { 5.175781, 1.082031, 0.2, 0.1, 0.1, 0.1, 0.1, 0.1, 0.8, 0.2, 0.8, 0.2,
      0.3, 0.1, 0.2, 0.1, 0.1, 0.1, 0.1, 0.1, 0.8, 0.2, 0.8, 0.2 },
    { 0.5, 0.5, 0.2, 0.1, 0.1, 0.1, 0.1, 0.1, 0.8, 0.2, 0.8, 0.2,
      0.3, 0.1, 0.2, 0.1, 0.1, 0.1, 0.1, 0.1, 0.8, 0.2, 0.8, 0.2 },
    { 0.5, 0.5, 0.2, 0.1, 0.1, 0.1, 0.1, 0.1, 0.8, 0.2, 0.8, 0.2,
      0.3, 0.1, 0.2, 0.1, 0.1, 0.1, 0.1, 0.1, 0.8, 0.2, 0.8, 0.2 },
    { 1.785, 0.36, 0.2, 0.1, 0.1, 0.1, 0.1, 0.1, 0.8, 0.2, 0.8, 0.2,
      0.3, 0.1, 0.2, 0.1, 0.1, 0.1, 0.1, 0.1, 0.8, 0.2, 0.8, 0.2 },
    { 0.6,0.0,-0.05,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0 },
    { 0.75,0.85,0.85,1.0,1.0,1.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0 },
    { 0.32,0.043,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0 },
    { 0.5,2.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0 },
    { 3.0,1.0,-1.0,1.0,-1.0,1.0,-1.0,1.0,-1.0,1.0,-1.0,1.0,-1.0,1.0,-1.0,1.0,-1.0,1.0,-1.0,1.0,-1.0,1.0,-1.0,1.0 },
    { 1.0287137,1.0287137,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0 },
    { -0.59,0.2,0.1,-0.33,0.0,0.0,2.0,0.0,0.0,0.0,0.0,0.0,-0.59,0.2,0.1,-0.33,0.0,0.0,2.0,0.0,0.0,0.0,0.0,0.0 },
    { -2.0,4.5,1.5,1.0,0.0,6.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0 },
    { 2.55,0.1,-0.06,0.15,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0 }
#ifdef Plendo
    , { 0.7,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0 },
    { 0.5,0.1,1.0,0.5,0.1,0.1,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0 },
    { 0.7,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0 },
    { 0.7,1.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0 }
#endif
	};
